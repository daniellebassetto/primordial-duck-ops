.capture-control {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 15px;
  padding: 20px;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  height: fit-content;
}

.capture-control h2 {
  margin-top: 0;
  color: #00d4ff;
  text-align: center;
}

.no-drone, .drone-offline {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  padding: 30px;
  color: #ffaa00;
  text-align: center;
}

.target-selection {
  margin-bottom: 20px;
}

.target-selection h3 {
  color: #fff;
  margin-bottom: 10px;
}

.duck-select {
  width: 100%;
  padding: 12px;
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  background: rgba(0, 0, 0, 0.3);
  color: #fff;
  font-size: 0.9rem;
}

.duck-select:focus {
  outline: none;
  border-color: #00d4ff;
  box-shadow: 0 0 10px rgba(0, 212, 255, 0.3);
}

.duck-info {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 10px;
  padding: 15px;
  margin-bottom: 20px;
}

.duck-info h4 {
  margin: 0 0 10px 0;
  color: #44ff44;
}

.duck-stats {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 8px;
  font-size: 0.9rem;
}

.strategy-btn {
  width: 100%;
  padding: 15px;
  border: none;
  border-radius: 10px;
  background: linear-gradient(45deg, #ff6b35, #f7931e);
  color: #fff;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  margin-bottom: 20px;
}

.strategy-btn:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 10px 30px rgba(255, 107, 53, 0.4);
}

.strategy-btn:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

.strategy-display {
  background: rgba(0, 0, 0, 0.3);
  border-radius: 10px;
  padding: 20px;
  margin-bottom: 20px;
}

.strategy-display h4 {
  margin: 0 0 15px 0;
  color: #ffaa00;
}

.strategy-content {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.strategy-item {
  background: rgba(255, 255, 255, 0.05);
  padding: 12px;
  border-radius: 8px;
}

.strategy-item strong {
  color: #00d4ff;
  display: block;
  margin-bottom: 5px;
}

.strategy-item p {
  margin: 0;
  line-height: 1.4;
}

.success-chance {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  gap: 10px;
}

.chance-bar {
  height: 10px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px;
  overflow: hidden;
}

.chance-fill {
  height: 100%;
  border-radius: 5px;
  transition: all 0.3s ease;
  position: relative;
}

.chance-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: shimmer 2s infinite;
}

.reasoning {
  font-style: italic;
  color: #aaa;
  font-size: 0.8rem;
}

.execute-btn {
  width: 100%;
  padding: 15px;
  border: none;
  border-radius: 10px;
  background: linear-gradient(45deg, #44ff44, #00aa00);
  color: #fff;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  margin-top: 15px;
}

.execute-btn:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 10px 30px rgba(68, 255, 68, 0.4);
}

.operation-progress {
  background: rgba(0, 0, 0, 0.3);
  border-radius: 10px;
  padding: 20px;
  text-align: center;
}

.operation-progress h4 {
  margin: 0 0 20px 0;
  color: #ff6b35;
}

.progress-animation {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  margin-bottom: 20px;
}

.pulse-circle {
  width: 60px;
  height: 60px;
  border: 3px solid #00d4ff;
  border-radius: 50%;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.7;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.operation-details {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  padding: 15px;
  text-align: left;
}

.operation-details p {
  margin: 8px 0;
  font-size: 0.9rem;
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}