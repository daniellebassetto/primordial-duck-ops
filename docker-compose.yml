version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: pdo-mysql
    environment:
      MYSQL_ROOT_PASSWORD: primordial@duck2025
      MYSQL_DATABASE: primordial_duck_operation
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pdo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pprimordial@duck2025"]
      timeout: 20s
      retries: 10
      interval: 10s

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pdo-api
    ports:
      - "7000:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=mysql;Database=primordial_duck_operation;User=root;Password=primordial@duck2025;
    networks:
      - pdo-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend/primordial-duck-frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:7000/api
        - VITE_EMAILJS_SERVICE_ID=${VITE_EMAILJS_SERVICE_ID}
        - VITE_EMAILJS_TEMPLATE_ID=${VITE_EMAILJS_TEMPLATE_ID}
        - VITE_EMAILJS_PUBLIC_KEY=${VITE_EMAILJS_PUBLIC_KEY}
    container_name: pdo-frontend
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - pdo-network
    restart: unless-stopped

networks:
  pdo-network:
    driver: bridge

volumes:
  mysql_data: